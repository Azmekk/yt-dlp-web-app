/* tslint:disable */
/* eslint-disable */
/**
 * YT-DLP-Web-App-Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MaybeBool } from './MaybeBool';
import {
    MaybeBoolFromJSON,
    MaybeBoolFromJSONTyped,
    MaybeBoolToJSON,
} from './MaybeBool';

/**
 * 
 * @export
 * @interface FormatData
 */
export interface FormatData {
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    manifestUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    extension?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    format?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    formatId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    formatNote?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    width?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    height?: number | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    resolution?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    dynamicRange?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    bitrate?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    audioBitrate?: number | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    audioCodec?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    audioSamplingRate?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    audioChannels?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    videoBitrate?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    frameRate?: number | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    videoCodec?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    containerFormat?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    fileSize?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    approximateFileSize?: number | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    playerUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    protocol?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    fragmentBaseUrl?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FormatData
     */
    isFromStart?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    preference?: number | null;
    /**
     * 
     * @type {string}
     * @memberof FormatData
     */
    language?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    languagePreference?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    quality?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    sourcePreference?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FormatData
     */
    stretchedRatio?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof FormatData
     */
    noResume?: boolean | null;
    /**
     * 
     * @type {MaybeBool}
     * @memberof FormatData
     */
    hasDRM?: MaybeBool;
}



/**
 * Check if a given object implements the FormatData interface.
 */
export function instanceOfFormatData(value: object): value is FormatData {
    return true;
}

export function FormatDataFromJSON(json: any): FormatData {
    return FormatDataFromJSONTyped(json, false);
}

export function FormatDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormatData {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'] == null ? undefined : json['url'],
        'manifestUrl': json['manifestUrl'] == null ? undefined : json['manifestUrl'],
        'extension': json['extension'] == null ? undefined : json['extension'],
        'format': json['format'] == null ? undefined : json['format'],
        'formatId': json['formatId'] == null ? undefined : json['formatId'],
        'formatNote': json['formatNote'] == null ? undefined : json['formatNote'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'resolution': json['resolution'] == null ? undefined : json['resolution'],
        'dynamicRange': json['dynamicRange'] == null ? undefined : json['dynamicRange'],
        'bitrate': json['bitrate'] == null ? undefined : json['bitrate'],
        'audioBitrate': json['audioBitrate'] == null ? undefined : json['audioBitrate'],
        'audioCodec': json['audioCodec'] == null ? undefined : json['audioCodec'],
        'audioSamplingRate': json['audioSamplingRate'] == null ? undefined : json['audioSamplingRate'],
        'audioChannels': json['audioChannels'] == null ? undefined : json['audioChannels'],
        'videoBitrate': json['videoBitrate'] == null ? undefined : json['videoBitrate'],
        'frameRate': json['frameRate'] == null ? undefined : json['frameRate'],
        'videoCodec': json['videoCodec'] == null ? undefined : json['videoCodec'],
        'containerFormat': json['containerFormat'] == null ? undefined : json['containerFormat'],
        'fileSize': json['fileSize'] == null ? undefined : json['fileSize'],
        'approximateFileSize': json['approximateFileSize'] == null ? undefined : json['approximateFileSize'],
        'playerUrl': json['playerUrl'] == null ? undefined : json['playerUrl'],
        'protocol': json['protocol'] == null ? undefined : json['protocol'],
        'fragmentBaseUrl': json['fragmentBaseUrl'] == null ? undefined : json['fragmentBaseUrl'],
        'isFromStart': json['isFromStart'] == null ? undefined : json['isFromStart'],
        'preference': json['preference'] == null ? undefined : json['preference'],
        'language': json['language'] == null ? undefined : json['language'],
        'languagePreference': json['languagePreference'] == null ? undefined : json['languagePreference'],
        'quality': json['quality'] == null ? undefined : json['quality'],
        'sourcePreference': json['sourcePreference'] == null ? undefined : json['sourcePreference'],
        'stretchedRatio': json['stretchedRatio'] == null ? undefined : json['stretchedRatio'],
        'noResume': json['noResume'] == null ? undefined : json['noResume'],
        'hasDRM': json['hasDRM'] == null ? undefined : MaybeBoolFromJSON(json['hasDRM']),
    };
}

export function FormatDataToJSON(value?: FormatData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'url': value['url'],
        'manifestUrl': value['manifestUrl'],
        'extension': value['extension'],
        'format': value['format'],
        'formatId': value['formatId'],
        'formatNote': value['formatNote'],
        'width': value['width'],
        'height': value['height'],
        'resolution': value['resolution'],
        'dynamicRange': value['dynamicRange'],
        'bitrate': value['bitrate'],
        'audioBitrate': value['audioBitrate'],
        'audioCodec': value['audioCodec'],
        'audioSamplingRate': value['audioSamplingRate'],
        'audioChannels': value['audioChannels'],
        'videoBitrate': value['videoBitrate'],
        'frameRate': value['frameRate'],
        'videoCodec': value['videoCodec'],
        'containerFormat': value['containerFormat'],
        'fileSize': value['fileSize'],
        'approximateFileSize': value['approximateFileSize'],
        'playerUrl': value['playerUrl'],
        'protocol': value['protocol'],
        'fragmentBaseUrl': value['fragmentBaseUrl'],
        'isFromStart': value['isFromStart'],
        'preference': value['preference'],
        'language': value['language'],
        'languagePreference': value['languagePreference'],
        'quality': value['quality'],
        'sourcePreference': value['sourcePreference'],
        'stretchedRatio': value['stretchedRatio'],
        'noResume': value['noResume'],
        'hasDRM': MaybeBoolToJSON(value['hasDRM']),
    };
}

