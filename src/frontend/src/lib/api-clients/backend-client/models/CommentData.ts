/* tslint:disable */
/* eslint-disable */
/**
 * YT-DLP-Web-App-Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommentData
 */
export interface CommentData {
    /**
     * 
     * @type {string}
     * @memberof CommentData
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommentData
     */
    author?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommentData
     */
    authorID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommentData
     */
    authorThumbnail?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommentData
     */
    html?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommentData
     */
    text?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CommentData
     */
    timestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof CommentData
     */
    parent?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CommentData
     */
    likeCount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CommentData
     */
    dislikeCount?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof CommentData
     */
    isFavorited?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof CommentData
     */
    authorIsUploader?: boolean | null;
}

/**
 * Check if a given object implements the CommentData interface.
 */
export function instanceOfCommentData(value: object): value is CommentData {
    return true;
}

export function CommentDataFromJSON(json: any): CommentData {
    return CommentDataFromJSONTyped(json, false);
}

export function CommentDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentData {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'author': json['author'] == null ? undefined : json['author'],
        'authorID': json['authorID'] == null ? undefined : json['authorID'],
        'authorThumbnail': json['authorThumbnail'] == null ? undefined : json['authorThumbnail'],
        'html': json['html'] == null ? undefined : json['html'],
        'text': json['text'] == null ? undefined : json['text'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'parent': json['parent'] == null ? undefined : json['parent'],
        'likeCount': json['likeCount'] == null ? undefined : json['likeCount'],
        'dislikeCount': json['dislikeCount'] == null ? undefined : json['dislikeCount'],
        'isFavorited': json['isFavorited'] == null ? undefined : json['isFavorited'],
        'authorIsUploader': json['authorIsUploader'] == null ? undefined : json['authorIsUploader'],
    };
}

export function CommentDataToJSON(value?: CommentData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'author': value['author'],
        'authorID': value['authorID'],
        'authorThumbnail': value['authorThumbnail'],
        'html': value['html'],
        'text': value['text'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
        'parent': value['parent'],
        'likeCount': value['likeCount'],
        'dislikeCount': value['dislikeCount'],
        'isFavorited': value['isFavorited'],
        'authorIsUploader': value['authorIsUploader'],
    };
}

